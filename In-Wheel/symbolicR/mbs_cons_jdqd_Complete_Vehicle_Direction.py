#
#-------------------------------------------------------------
#
#	ROBOTRAN - Version 6.6 (build : february 22, 2008)
#
#	Copyright 
#	Universite catholique de Louvain 
#	Departement de Mecanique 
#	Unite de Production Mecanique et Machines 
#	2, Place du Levant 
#	1348 Louvain-la-Neuve 
#	http://www.robotran.be// 
#
#	==> Generation Date : Fri Apr  3 02:23:56 2020
#
#	==> Project name : Complete_Vehicle_Direction
#	==> using XML input file 
#
#	==> Number of joints : 41
#
#	==> Function : F18 : Constraints Quadratic Velocity Terms (Jdqd)
#	==> Flops complexity : 1580
#
#	==> Generation Time :  0.040 seconds
#	==> Post-Processing :  0.020 seconds
#
#-------------------------------------------------------------
#
import numpy as np  

def cons_jdqd(Jdqd,s):   
  q = s.q
  qd = s.qd
  qdd = s.qdd

# === begin imp_aux === 

# === end imp_aux === 

# ===== BEGIN task 0 ===== 

# = = Block_0_0_0_0_0_2 = = 
 
# Trigonometric Variables  

  C7 = np.cos(q[7])
  S7 = np.sin(q[7])
  C8 = np.cos(q[8])
  S8 = np.sin(q[8])
  C9 = np.cos(q[9])
  S9 = np.sin(q[9])
  C10 = np.cos(q[10])
  S10 = np.sin(q[10])

# = = Block_0_0_0_0_0_3 = = 
 
# Trigonometric Variables  

  C11 = np.cos(q[11])
  S11 = np.sin(q[11])

# = = Block_0_0_0_0_0_5 = = 
 
# Trigonometric Variables  

  C15 = np.cos(q[15])
  S15 = np.sin(q[15])
  C16 = np.cos(q[16])
  S16 = np.sin(q[16])
  C17 = np.cos(q[17])
  S17 = np.sin(q[17])
  C18 = np.cos(q[18])
  S18 = np.sin(q[18])

# = = Block_0_0_0_0_0_6 = = 
 
# Trigonometric Variables  

  C19 = np.cos(q[19])
  S19 = np.sin(q[19])

# = = Block_0_0_0_0_0_8 = = 
 
# Trigonometric Variables  

  C23 = np.cos(q[23])
  S23 = np.sin(q[23])
  C24 = np.cos(q[24])
  S24 = np.sin(q[24])
  C25 = np.cos(q[25])
  S25 = np.sin(q[25])
  C26 = np.cos(q[26])
  S26 = np.sin(q[26])
  C27 = np.cos(q[27])
  S27 = np.sin(q[27])

# = = Block_0_0_0_0_0_9 = = 
 
# Trigonometric Variables  

  C28 = np.cos(q[28])
  S28 = np.sin(q[28])

# = = Block_0_0_0_0_0_11 = = 
 
# Trigonometric Variables  

  C32 = np.cos(q[32])
  S32 = np.sin(q[32])
  C33 = np.cos(q[33])
  S33 = np.sin(q[33])
  C34 = np.cos(q[34])
  S34 = np.sin(q[34])
  C35 = np.cos(q[35])
  S35 = np.sin(q[35])
  C36 = np.cos(q[36])
  S36 = np.sin(q[36])

# = = Block_0_0_0_0_0_12 = = 
 
# Trigonometric Variables  

  C37 = np.cos(q[37])
  S37 = np.sin(q[37])

# = = Block_0_1_0_0_0_2 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_7_28 = C7*S8
  RO_7_38 = S7*S8
  RO_7_58 = C7*C8
  RO_7_68 = S7*C8
  RO_7_49 = -S8*C9
  RO_7_59 = RO_7_58*C9-S7*S9
  RO_7_69 = RO_7_68*C9+C7*S9
  RO_7_79 = S8*S9
  RO_7_89 = -(RO_7_58*S9+S7*C9)
  RO_7_99 = -(RO_7_68*S9-C7*C9)
  RO_7_110 = -(RO_7_79*S10-C10*C8)
  RO_7_210 = RO_7_28*C10-RO_7_89*S10
  RO_7_310 = RO_7_38*C10-RO_7_99*S10
  RO_7_710 = RO_7_79*C10+S10*C8
  RO_7_810 = RO_7_28*S10+RO_7_89*C10
  RO_7_910 = RO_7_38*S10+RO_7_99*C10
  RL_7_28 = s.dpt[2,14]*C7
  RL_7_38 = s.dpt[2,14]*S7
#
  RL_19_161 = RO_7_110*s.dpt[1,17]+RO_7_49*s.dpt[2,17]
  RL_19_261 = RO_7_210*s.dpt[1,17]+RO_7_59*s.dpt[2,17]
  RL_19_361 = RO_7_310*s.dpt[1,17]+RO_7_69*s.dpt[2,17]

# = = Block_0_1_0_0_0_3 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_7_711 = -(RO_7_49*S11-RO_7_710*C11)
  RO_7_811 = -(RO_7_59*S11-RO_7_810*C11)
  RO_7_911 = -(RO_7_69*S11-RO_7_910*C11)
  RL_7_111 = RO_7_710*s.dpt[3,15]
  RL_7_211 = RO_7_810*s.dpt[3,15]
  RL_7_311 = RO_7_910*s.dpt[3,15]
  RL_7_112 = RO_7_711*q[12]
  RL_7_212 = RO_7_811*q[12]
  RL_7_312 = RO_7_911*q[12]
  RL_7_149 = RO_7_711*s.dpt[3,18]
  RL_7_249 = RO_7_811*s.dpt[3,18]
  RL_7_349 = RO_7_911*s.dpt[3,18]

# = = Block_0_1_0_0_0_5 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_4_216 = C15*S16
  RO_4_316 = S15*S16
  RO_4_516 = C15*C16
  RO_4_616 = S15*C16
  RO_4_417 = -S16*C17
  RO_4_517 = RO_4_516*C17-S15*S17
  RO_4_617 = RO_4_616*C17+C15*S17
  RO_4_717 = S16*S17
  RO_4_817 = -(RO_4_516*S17+S15*C17)
  RO_4_917 = -(RO_4_616*S17-C15*C17)
  RO_4_118 = -(RO_4_717*S18-C16*C18)
  RO_4_218 = RO_4_216*C18-RO_4_817*S18
  RO_4_318 = RO_4_316*C18-RO_4_917*S18
  RO_4_718 = RO_4_717*C18+C16*S18
  RO_4_818 = RO_4_216*S18+RO_4_817*C18
  RO_4_918 = RO_4_316*S18+RO_4_917*C18
  RL_4_216 = s.dpt[2,20]*C15
  RL_4_316 = s.dpt[2,20]*S15
#
  RL_16_158 = RO_4_118*s.dpt[1,23]+RO_4_417*s.dpt[2,23]
  RL_16_258 = RO_4_218*s.dpt[1,23]+RO_4_517*s.dpt[2,23]
  RL_16_358 = RO_4_318*s.dpt[1,23]+RO_4_617*s.dpt[2,23]

# = = Block_0_1_0_0_0_6 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_4_719 = -(RO_4_417*S19-RO_4_718*C19)
  RO_4_819 = -(RO_4_517*S19-RO_4_818*C19)
  RO_4_919 = -(RO_4_617*S19-RO_4_918*C19)
  RL_4_119 = RO_4_718*s.dpt[3,21]
  RL_4_219 = RO_4_818*s.dpt[3,21]
  RL_4_319 = RO_4_918*s.dpt[3,21]
  RL_4_120 = RO_4_719*q[20]
  RL_4_220 = RO_4_819*q[20]
  RL_4_320 = RO_4_919*q[20]
  RL_4_146 = RO_4_719*s.dpt[3,24]
  RL_4_246 = RO_4_819*s.dpt[3,24]
  RL_4_346 = RO_4_919*s.dpt[3,24]

# = = Block_0_1_0_0_0_8 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_1_224 = C23*S24
  RO_1_324 = S23*S24
  RO_1_524 = C23*C24
  RO_1_624 = S23*C24
  RO_1_425 = -S24*C25
  RO_1_525 = RO_1_524*C25-S23*S25
  RO_1_625 = RO_1_624*C25+C23*S25
  RO_1_725 = S24*S25
  RO_1_825 = -(RO_1_524*S25+S23*C25)
  RO_1_925 = -(RO_1_624*S25-C23*C25)
  RO_1_126 = -(RO_1_725*S26-C24*C26)
  RO_1_226 = RO_1_224*C26-RO_1_825*S26
  RO_1_326 = RO_1_324*C26-RO_1_925*S26
  RO_1_726 = RO_1_725*C26+C24*S26
  RO_1_826 = RO_1_224*S26+RO_1_825*C26
  RO_1_926 = RO_1_324*S26+RO_1_925*C26
  RO_1_127 = RO_1_126*C27+RO_1_425*S27
  RO_1_227 = RO_1_226*C27+RO_1_525*S27
  RO_1_327 = RO_1_326*C27+RO_1_625*S27
  RL_1_125 = -s.dpt[2,26]*S24
  RL_1_225 = RO_1_524*s.dpt[2,26]
  RL_1_325 = RO_1_624*s.dpt[2,26]
  PO_1_125 = RL_1_125+s.dpt[1,10]
  PO_1_225 = RL_1_225+s.dpt[2,10]
#
  RL_9_151 = RO_1_127*s.dpt[1,30]+RO_1_726*s.dpt[3,30]
  RL_9_251 = RO_1_227*s.dpt[1,30]+RO_1_826*s.dpt[3,30]
  RL_9_351 = RO_1_327*s.dpt[1,30]+RO_1_926*s.dpt[3,30]
#
  RL_11_153 = RO_1_127*s.dpt[1,29]+RO_1_726*s.dpt[3,29]
  RL_11_253 = RO_1_227*s.dpt[1,29]+RO_1_826*s.dpt[3,29]
  RL_11_353 = RO_1_327*s.dpt[1,29]+RO_1_926*s.dpt[3,29]

# = = Block_0_1_0_0_0_9 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_1_728 = RO_1_726*C28+S28*(RO_1_126*S27-RO_1_425*C27)
  RO_1_828 = RO_1_826*C28+S28*(RO_1_226*S27-RO_1_525*C27)
  RO_1_928 = RO_1_926*C28+S28*(RO_1_326*S27-RO_1_625*C27)
  RL_1_128 = RO_1_726*s.dpt[3,27]
  RL_1_228 = RO_1_826*s.dpt[3,27]
  RL_1_328 = RO_1_926*s.dpt[3,27]
  RL_1_129 = RO_1_728*q[29]
  RL_1_229 = RO_1_828*q[29]
  RL_1_329 = RO_1_928*q[29]
  RL_1_143 = RO_1_728*s.dpt[3,31]
  RL_1_243 = RO_1_828*s.dpt[3,31]
  RL_1_343 = RO_1_928*s.dpt[3,31]

# = = Block_0_1_0_0_0_11 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_2_233 = C32*S33
  RO_2_333 = S32*S33
  RO_2_533 = C32*C33
  RO_2_633 = S32*C33
  RO_2_434 = -S33*C34
  RO_2_534 = RO_2_533*C34-S32*S34
  RO_2_634 = RO_2_633*C34+C32*S34
  RO_2_734 = S33*S34
  RO_2_834 = -(RO_2_533*S34+S32*C34)
  RO_2_934 = -(RO_2_633*S34-C32*C34)
  RO_2_135 = -(RO_2_734*S35-C33*C35)
  RO_2_235 = RO_2_233*C35-RO_2_834*S35
  RO_2_335 = RO_2_333*C35-RO_2_934*S35
  RO_2_735 = RO_2_734*C35+C33*S35
  RO_2_835 = RO_2_233*S35+RO_2_834*C35
  RO_2_935 = RO_2_333*S35+RO_2_934*C35
  RO_2_136 = RO_2_135*C36+RO_2_434*S36
  RO_2_236 = RO_2_235*C36+RO_2_534*S36
  RO_2_336 = RO_2_335*C36+RO_2_634*S36
  RL_2_134 = -s.dpt[2,33]*S33
  RL_2_234 = RO_2_533*s.dpt[2,33]
  RL_2_334 = RO_2_633*s.dpt[2,33]
  PO_2_134 = RL_2_134+s.dpt[1,12]
  PO_2_234 = RL_2_234+s.dpt[2,12]
#
  RL_12_154 = RO_2_136*s.dpt[1,34]+RO_2_735*s.dpt[3,34]
  RL_12_254 = RO_2_236*s.dpt[1,34]+RO_2_835*s.dpt[3,34]
  RL_12_354 = RO_2_336*s.dpt[1,34]+RO_2_935*s.dpt[3,34]
#
  RL_14_156 = RO_2_136*s.dpt[1,35]+RO_2_735*s.dpt[3,35]
  RL_14_256 = RO_2_236*s.dpt[1,35]+RO_2_835*s.dpt[3,35]
  RL_14_356 = RO_2_336*s.dpt[1,35]+RO_2_935*s.dpt[3,35]

# = = Block_0_1_0_0_0_12 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_2_737 = RO_2_735*C37+S37*(RO_2_135*S36-RO_2_434*C36)
  RO_2_837 = RO_2_835*C37+S37*(RO_2_235*S36-RO_2_534*C36)
  RO_2_937 = RO_2_935*C37+S37*(RO_2_335*S36-RO_2_634*C36)
  RL_2_137 = RO_2_735*s.dpt[3,36]
  RL_2_237 = RO_2_835*s.dpt[3,36]
  RL_2_337 = RO_2_935*s.dpt[3,36]
  RL_2_138 = RO_2_737*q[38]
  RL_2_238 = RO_2_837*q[38]
  RL_2_338 = RO_2_937*q[38]
  RL_2_144 = RO_2_737*s.dpt[3,38]
  RL_2_244 = RO_2_837*s.dpt[3,38]
  RL_2_344 = RO_2_937*s.dpt[3,38]

# = = Block_0_2_0_0_0_0 = = 
 
# Constraints Quadratic Terms 

#
  OM_1_224 = -qd[24]*S23
  OM_1_324 = qd[24]*C23
  Ompqp_1_224 = -qd[23]*qd[24]*C23
  Ompqp_1_324 = -qd[23]*qd[24]*S23
  OM_1_125 = qd[23]+qd[25]*C24
  OM_1_225 = OM_1_224+RO_1_224*qd[25]
  OM_1_325 = OM_1_324+RO_1_324*qd[25]
  OR_1_125 = -qd[24]*s.dpt[2,26]*C24
  OR_1_225 = OM_1_324*RL_1_125-RL_1_325*qd[23]
  OR_1_325 = -(OM_1_224*RL_1_125-RL_1_225*qd[23])
  Apqp_1_125 = OM_1_224*OR_1_325-OM_1_324*OR_1_225+Ompqp_1_224*RL_1_325-Ompqp_1_324*RL_1_225
  Apqp_1_225 = OM_1_324*OR_1_125-OR_1_325*qd[23]+Ompqp_1_324*RL_1_125
  Apqp_1_325 = -(OM_1_224*OR_1_125-OR_1_225*qd[23]+Ompqp_1_224*RL_1_125)
  OM_1_126 = OM_1_125+RO_1_425*qd[26]
  OM_1_226 = OM_1_225+RO_1_525*qd[26]
  OM_1_326 = OM_1_325+RO_1_625*qd[26]
  OM_1_127 = OM_1_126+RO_1_726*qd[27]
  OM_1_227 = OM_1_226+RO_1_826*qd[27]
  OM_1_327 = OM_1_326+RO_1_926*qd[27]
  Ompqp_1_127 = -(qd[24]*qd[25]*S24-qd[26]*(OM_1_225*RO_1_625-OM_1_325*RO_1_525)-qd[27]*(OM_1_226*RO_1_926-OM_1_326*\
   RO_1_826))
  Ompqp_1_227 = Ompqp_1_224+qd[25]*(OM_1_324*C24-RO_1_324*qd[23])-qd[26]*(OM_1_125*RO_1_625-OM_1_325*RO_1_425)-qd[27]*(\
   OM_1_126*RO_1_926-OM_1_326*RO_1_726)
  Ompqp_1_327 = Ompqp_1_324-qd[25]*(OM_1_224*C24-RO_1_224*qd[23])+qd[26]*(OM_1_125*RO_1_525-OM_1_225*RO_1_425)+qd[27]*(\
   OM_1_126*RO_1_826-OM_1_226*RO_1_726)
  OM_1_128 = OM_1_127+RO_1_127*qd[28]
  OM_1_228 = OM_1_227+RO_1_227*qd[28]
  OM_1_328 = OM_1_327+RO_1_327*qd[28]
  OR_1_128 = OM_1_227*RL_1_328-OM_1_327*RL_1_228
  OR_1_228 = -(OM_1_127*RL_1_328-OM_1_327*RL_1_128)
  OR_1_328 = OM_1_127*RL_1_228-OM_1_227*RL_1_128
  Ompqp_1_128 = Ompqp_1_127+qd[28]*(OM_1_227*RO_1_327-OM_1_327*RO_1_227)
  Ompqp_1_228 = Ompqp_1_227-qd[28]*(OM_1_127*RO_1_327-OM_1_327*RO_1_127)
  Ompqp_1_328 = Ompqp_1_327+qd[28]*(OM_1_127*RO_1_227-OM_1_227*RO_1_127)
  OR_1_129 = OM_1_228*RL_1_329-OM_1_328*RL_1_229
  OR_1_229 = -(OM_1_128*RL_1_329-OM_1_328*RL_1_129)
  OR_1_329 = OM_1_128*RL_1_229-OM_1_228*RL_1_129
  OR_1_143 = OM_1_228*RL_1_343-OM_1_328*RL_1_243
  OR_1_243 = -(OM_1_128*RL_1_343-OM_1_328*RL_1_143)
  OR_1_343 = OM_1_128*RL_1_243-OM_1_228*RL_1_143
  Apqp_1_143 = Apqp_1_125+OM_1_227*OR_1_328+OM_1_228*OR_1_329+OM_1_228*OR_1_343-OM_1_327*OR_1_228-OM_1_328*OR_1_229-\
   OM_1_328*OR_1_243+Ompqp_1_227*RL_1_328+Ompqp_1_228*RL_1_329+Ompqp_1_228*RL_1_343-Ompqp_1_327*RL_1_228-Ompqp_1_328*RL_1_229-\
   Ompqp_1_328*RL_1_243+(2.0)*qd[29]*(OM_1_228*RO_1_928-OM_1_328*RO_1_828)
  Apqp_1_243 = Apqp_1_225-OM_1_127*OR_1_328-OM_1_128*OR_1_329-OM_1_128*OR_1_343+OM_1_327*OR_1_128+OM_1_328*OR_1_129+\
   OM_1_328*OR_1_143-Ompqp_1_127*RL_1_328-Ompqp_1_128*RL_1_329-Ompqp_1_128*RL_1_343+Ompqp_1_327*RL_1_128+Ompqp_1_328*RL_1_129+\
   Ompqp_1_328*RL_1_143-(2.0)*qd[29]*(OM_1_128*RO_1_928-OM_1_328*RO_1_728)
  Apqp_1_343 = Apqp_1_325+OM_1_127*OR_1_228+OM_1_128*OR_1_229+OM_1_128*OR_1_243-OM_1_227*OR_1_128-OM_1_228*OR_1_129-\
   OM_1_228*OR_1_143+Ompqp_1_127*RL_1_228+Ompqp_1_128*RL_1_229+Ompqp_1_128*RL_1_243-Ompqp_1_227*RL_1_128-Ompqp_1_228*RL_1_129-\
   Ompqp_1_228*RL_1_143+(2.0)*qd[29]*(OM_1_128*RO_1_828-OM_1_228*RO_1_728)
#
  OM_2_233 = -qd[33]*S32
  OM_2_333 = qd[33]*C32
  Ompqp_2_233 = -qd[32]*qd[33]*C32
  Ompqp_2_333 = -qd[32]*qd[33]*S32
  OM_2_134 = qd[32]+qd[34]*C33
  OM_2_234 = OM_2_233+RO_2_233*qd[34]
  OM_2_334 = OM_2_333+RO_2_333*qd[34]
  OR_2_134 = -qd[33]*s.dpt[2,33]*C33
  OR_2_234 = OM_2_333*RL_2_134-RL_2_334*qd[32]
  OR_2_334 = -(OM_2_233*RL_2_134-RL_2_234*qd[32])
  Apqp_2_134 = OM_2_233*OR_2_334-OM_2_333*OR_2_234+Ompqp_2_233*RL_2_334-Ompqp_2_333*RL_2_234
  Apqp_2_234 = OM_2_333*OR_2_134-OR_2_334*qd[32]+Ompqp_2_333*RL_2_134
  Apqp_2_334 = -(OM_2_233*OR_2_134-OR_2_234*qd[32]+Ompqp_2_233*RL_2_134)
  OM_2_135 = OM_2_134+RO_2_434*qd[35]
  OM_2_235 = OM_2_234+RO_2_534*qd[35]
  OM_2_335 = OM_2_334+RO_2_634*qd[35]
  OM_2_136 = OM_2_135+RO_2_735*qd[36]
  OM_2_236 = OM_2_235+RO_2_835*qd[36]
  OM_2_336 = OM_2_335+RO_2_935*qd[36]
  Ompqp_2_136 = -(qd[33]*qd[34]*S33-qd[35]*(OM_2_234*RO_2_634-OM_2_334*RO_2_534)-qd[36]*(OM_2_235*RO_2_935-OM_2_335*\
   RO_2_835))
  Ompqp_2_236 = Ompqp_2_233+qd[34]*(OM_2_333*C33-RO_2_333*qd[32])-qd[35]*(OM_2_134*RO_2_634-OM_2_334*RO_2_434)-qd[36]*(\
   OM_2_135*RO_2_935-OM_2_335*RO_2_735)
  Ompqp_2_336 = Ompqp_2_333-qd[34]*(OM_2_233*C33-RO_2_233*qd[32])+qd[35]*(OM_2_134*RO_2_534-OM_2_234*RO_2_434)+qd[36]*(\
   OM_2_135*RO_2_835-OM_2_235*RO_2_735)
  OM_2_137 = OM_2_136+RO_2_136*qd[37]
  OM_2_237 = OM_2_236+RO_2_236*qd[37]
  OM_2_337 = OM_2_336+RO_2_336*qd[37]
  OR_2_137 = OM_2_236*RL_2_337-OM_2_336*RL_2_237
  OR_2_237 = -(OM_2_136*RL_2_337-OM_2_336*RL_2_137)
  OR_2_337 = OM_2_136*RL_2_237-OM_2_236*RL_2_137
  Ompqp_2_137 = Ompqp_2_136+qd[37]*(OM_2_236*RO_2_336-OM_2_336*RO_2_236)
  Ompqp_2_237 = Ompqp_2_236-qd[37]*(OM_2_136*RO_2_336-OM_2_336*RO_2_136)
  Ompqp_2_337 = Ompqp_2_336+qd[37]*(OM_2_136*RO_2_236-OM_2_236*RO_2_136)
  OR_2_138 = OM_2_237*RL_2_338-OM_2_337*RL_2_238
  OR_2_238 = -(OM_2_137*RL_2_338-OM_2_337*RL_2_138)
  OR_2_338 = OM_2_137*RL_2_238-OM_2_237*RL_2_138
  OR_2_144 = OM_2_237*RL_2_344-OM_2_337*RL_2_244
  OR_2_244 = -(OM_2_137*RL_2_344-OM_2_337*RL_2_144)
  OR_2_344 = OM_2_137*RL_2_244-OM_2_237*RL_2_144
  Apqp_2_144 = Apqp_2_134+OM_2_236*OR_2_337+OM_2_237*OR_2_338+OM_2_237*OR_2_344-OM_2_336*OR_2_237-OM_2_337*OR_2_238-\
   OM_2_337*OR_2_244+Ompqp_2_236*RL_2_337+Ompqp_2_237*RL_2_338+Ompqp_2_237*RL_2_344-Ompqp_2_336*RL_2_237-Ompqp_2_337*RL_2_238-\
   Ompqp_2_337*RL_2_244+(2.0)*qd[38]*(OM_2_237*RO_2_937-OM_2_337*RO_2_837)
  Apqp_2_244 = Apqp_2_234-OM_2_136*OR_2_337-OM_2_137*OR_2_338-OM_2_137*OR_2_344+OM_2_336*OR_2_137+OM_2_337*OR_2_138+\
   OM_2_337*OR_2_144-Ompqp_2_136*RL_2_337-Ompqp_2_137*RL_2_338-Ompqp_2_137*RL_2_344+Ompqp_2_336*RL_2_137+Ompqp_2_337*RL_2_138+\
   Ompqp_2_337*RL_2_144-(2.0)*qd[38]*(OM_2_137*RO_2_937-OM_2_337*RO_2_737)
  Apqp_2_344 = Apqp_2_334+OM_2_136*OR_2_237+OM_2_137*OR_2_238+OM_2_137*OR_2_244-OM_2_236*OR_2_137-OM_2_237*OR_2_138-\
   OM_2_237*OR_2_144+Ompqp_2_136*RL_2_237+Ompqp_2_137*RL_2_238+Ompqp_2_137*RL_2_244-Ompqp_2_236*RL_2_137-Ompqp_2_237*RL_2_138-\
   Ompqp_2_237*RL_2_144+(2.0)*qd[38]*(OM_2_137*RO_2_837-OM_2_237*RO_2_737)
#
  OM_4_216 = -qd[16]*S15
  OM_4_316 = qd[16]*C15
  OR_4_216 = -RL_4_316*qd[15]
  OR_4_316 = RL_4_216*qd[15]
  Apqp_4_216 = -OR_4_316*qd[15]
  Apqp_4_316 = OR_4_216*qd[15]
  OM_4_117 = qd[15]+qd[17]*C16
  OM_4_217 = OM_4_216+RO_4_216*qd[17]
  OM_4_317 = OM_4_316+RO_4_316*qd[17]
  OM_4_118 = OM_4_117+RO_4_417*qd[18]
  OM_4_218 = OM_4_217+RO_4_517*qd[18]
  OM_4_318 = OM_4_317+RO_4_617*qd[18]
  Ompqp_4_118 = -(qd[16]*qd[17]*S16-qd[18]*(OM_4_217*RO_4_617-OM_4_317*RO_4_517))
  Ompqp_4_218 = -(qd[15]*qd[16]*C15-qd[17]*(OM_4_316*C16-RO_4_316*qd[15])+qd[18]*(OM_4_117*RO_4_617-OM_4_317*RO_4_417))
  Ompqp_4_318 = -(qd[15]*qd[16]*S15+qd[17]*(OM_4_216*C16-RO_4_216*qd[15])-qd[18]*(OM_4_117*RO_4_517-OM_4_217*RO_4_417))
  OM_4_119 = OM_4_118+RO_4_118*qd[19]
  OM_4_219 = OM_4_218+RO_4_218*qd[19]
  OM_4_319 = OM_4_318+RO_4_318*qd[19]
  OR_4_119 = OM_4_218*RL_4_319-OM_4_318*RL_4_219
  OR_4_219 = -(OM_4_118*RL_4_319-OM_4_318*RL_4_119)
  OR_4_319 = OM_4_118*RL_4_219-OM_4_218*RL_4_119
  Ompqp_4_119 = Ompqp_4_118+qd[19]*(OM_4_218*RO_4_318-OM_4_318*RO_4_218)
  Ompqp_4_219 = Ompqp_4_218-qd[19]*(OM_4_118*RO_4_318-OM_4_318*RO_4_118)
  Ompqp_4_319 = Ompqp_4_318+qd[19]*(OM_4_118*RO_4_218-OM_4_218*RO_4_118)
  OR_4_120 = OM_4_219*RL_4_320-OM_4_319*RL_4_220
  OR_4_220 = -(OM_4_119*RL_4_320-OM_4_319*RL_4_120)
  OR_4_320 = OM_4_119*RL_4_220-OM_4_219*RL_4_120
  OR_4_146 = OM_4_219*RL_4_346-OM_4_319*RL_4_246
  OR_4_246 = -(OM_4_119*RL_4_346-OM_4_319*RL_4_146)
  OR_4_346 = OM_4_119*RL_4_246-OM_4_219*RL_4_146
  Apqp_4_146 = OM_4_218*OR_4_319+OM_4_219*OR_4_320+OM_4_219*OR_4_346-OM_4_318*OR_4_219-OM_4_319*OR_4_220-OM_4_319*\
   OR_4_246+Ompqp_4_218*RL_4_319+Ompqp_4_219*RL_4_320+Ompqp_4_219*RL_4_346-Ompqp_4_318*RL_4_219-Ompqp_4_319*RL_4_220-\
   Ompqp_4_319*RL_4_246+(2.0)*qd[20]*(OM_4_219*RO_4_919-OM_4_319*RO_4_819)
  Apqp_4_246 = Apqp_4_216-OM_4_118*OR_4_319-OM_4_119*OR_4_320-OM_4_119*OR_4_346+OM_4_318*OR_4_119+OM_4_319*OR_4_120+\
   OM_4_319*OR_4_146-Ompqp_4_118*RL_4_319-Ompqp_4_119*RL_4_320-Ompqp_4_119*RL_4_346+Ompqp_4_318*RL_4_119+Ompqp_4_319*RL_4_120+\
   Ompqp_4_319*RL_4_146-(2.0)*qd[20]*(OM_4_119*RO_4_919-OM_4_319*RO_4_719)
  Apqp_4_346 = Apqp_4_316+OM_4_118*OR_4_219+OM_4_119*OR_4_220+OM_4_119*OR_4_246-OM_4_218*OR_4_119-OM_4_219*OR_4_120-\
   OM_4_219*OR_4_146+Ompqp_4_118*RL_4_219+Ompqp_4_119*RL_4_220+Ompqp_4_119*RL_4_246-Ompqp_4_218*RL_4_119-Ompqp_4_219*RL_4_120-\
   Ompqp_4_219*RL_4_146+(2.0)*qd[20]*(OM_4_119*RO_4_819-OM_4_219*RO_4_719)
#
  OM_7_28 = -qd[8]*S7
  OM_7_38 = qd[8]*C7
  OR_7_28 = -RL_7_38*qd[7]
  OR_7_38 = RL_7_28*qd[7]
  Apqp_7_28 = -OR_7_38*qd[7]
  Apqp_7_38 = OR_7_28*qd[7]
  OM_7_19 = qd[7]+qd[9]*C8
  OM_7_29 = OM_7_28+RO_7_28*qd[9]
  OM_7_39 = OM_7_38+RO_7_38*qd[9]
  OM_7_110 = OM_7_19+RO_7_49*qd[10]
  OM_7_210 = OM_7_29+RO_7_59*qd[10]
  OM_7_310 = OM_7_39+RO_7_69*qd[10]
  Ompqp_7_110 = qd[10]*(OM_7_29*RO_7_69-OM_7_39*RO_7_59)-qd[8]*qd[9]*S8
  Ompqp_7_210 = -(qd[10]*(OM_7_19*RO_7_69-OM_7_39*RO_7_49)+qd[7]*qd[8]*C7-qd[9]*(OM_7_38*C8-RO_7_38*qd[7]))
  Ompqp_7_310 = qd[10]*(OM_7_19*RO_7_59-OM_7_29*RO_7_49)-qd[7]*qd[8]*S7-qd[9]*(OM_7_28*C8-RO_7_28*qd[7])
  OM_7_111 = OM_7_110+RO_7_110*qd[11]
  OM_7_211 = OM_7_210+RO_7_210*qd[11]
  OM_7_311 = OM_7_310+RO_7_310*qd[11]
  OR_7_111 = OM_7_210*RL_7_311-OM_7_310*RL_7_211
  OR_7_211 = -(OM_7_110*RL_7_311-OM_7_310*RL_7_111)
  OR_7_311 = OM_7_110*RL_7_211-OM_7_210*RL_7_111
  Ompqp_7_111 = Ompqp_7_110+qd[11]*(OM_7_210*RO_7_310-OM_7_310*RO_7_210)
  Ompqp_7_211 = Ompqp_7_210-qd[11]*(OM_7_110*RO_7_310-OM_7_310*RO_7_110)
  Ompqp_7_311 = Ompqp_7_310+qd[11]*(OM_7_110*RO_7_210-OM_7_210*RO_7_110)
  OR_7_112 = OM_7_211*RL_7_312-OM_7_311*RL_7_212
  OR_7_212 = -(OM_7_111*RL_7_312-OM_7_311*RL_7_112)
  OR_7_312 = OM_7_111*RL_7_212-OM_7_211*RL_7_112
  OR_7_149 = OM_7_211*RL_7_349-OM_7_311*RL_7_249
  OR_7_249 = -(OM_7_111*RL_7_349-OM_7_311*RL_7_149)
  OR_7_349 = OM_7_111*RL_7_249-OM_7_211*RL_7_149
  Apqp_7_149 = OM_7_210*OR_7_311+OM_7_211*OR_7_312+OM_7_211*OR_7_349-OM_7_310*OR_7_211-OM_7_311*OR_7_212-OM_7_311*\
   OR_7_249+Ompqp_7_210*RL_7_311+Ompqp_7_211*RL_7_312+Ompqp_7_211*RL_7_349-Ompqp_7_310*RL_7_211-Ompqp_7_311*RL_7_212-\
   Ompqp_7_311*RL_7_249+(2.0)*qd[12]*(OM_7_211*RO_7_911-OM_7_311*RO_7_811)
  Apqp_7_249 = Apqp_7_28-OM_7_110*OR_7_311-OM_7_111*OR_7_312-OM_7_111*OR_7_349+OM_7_310*OR_7_111+OM_7_311*OR_7_112+\
   OM_7_311*OR_7_149-Ompqp_7_110*RL_7_311-Ompqp_7_111*RL_7_312-Ompqp_7_111*RL_7_349+Ompqp_7_310*RL_7_111+Ompqp_7_311*RL_7_112+\
   Ompqp_7_311*RL_7_149-(2.0)*qd[12]*(OM_7_111*RO_7_911-OM_7_311*RO_7_711)
  Apqp_7_349 = Apqp_7_38+OM_7_110*OR_7_211+OM_7_111*OR_7_212+OM_7_111*OR_7_249-OM_7_210*OR_7_111-OM_7_211*OR_7_112-\
   OM_7_211*OR_7_149+Ompqp_7_110*RL_7_211+Ompqp_7_111*RL_7_212+Ompqp_7_111*RL_7_249-Ompqp_7_210*RL_7_111-Ompqp_7_211*RL_7_112-\
   Ompqp_7_211*RL_7_149+(2.0)*qd[12]*(OM_7_111*RO_7_811-OM_7_211*RO_7_711)
#
  OR_9_151 = OM_1_227*RL_9_351-OM_1_327*RL_9_251
  OR_9_251 = -(OM_1_127*RL_9_351-OM_1_327*RL_9_151)
  OR_9_351 = OM_1_127*RL_9_251-OM_1_227*RL_9_151
  VI_9_151 = OR_1_125+OR_9_151
  VI_9_251 = OR_1_225+OR_9_251
  VI_9_351 = OR_1_325+OR_9_351
#
  OR_11_153 = OM_1_227*RL_11_353-OM_1_327*RL_11_253
  OR_11_253 = -(OM_1_127*RL_11_353-OM_1_327*RL_11_153)
  OR_11_353 = OM_1_127*RL_11_253-OM_1_227*RL_11_153
  VI_11_153 = OR_11_153+OR_1_125
  VI_11_253 = OR_11_253+OR_1_225
  VI_11_353 = OR_11_353+OR_1_325
#
  OR_12_154 = OM_2_236*RL_12_354-OM_2_336*RL_12_254
  OR_12_254 = -(OM_2_136*RL_12_354-OM_2_336*RL_12_154)
  OR_12_354 = OM_2_136*RL_12_254-OM_2_236*RL_12_154
  VI_12_154 = OR_12_154+OR_2_134
  VI_12_254 = OR_12_254+OR_2_234
  VI_12_354 = OR_12_354+OR_2_334
#
  OR_14_156 = OM_2_236*RL_14_356-OM_2_336*RL_14_256
  OR_14_256 = -(OM_2_136*RL_14_356-OM_2_336*RL_14_156)
  OR_14_356 = OM_2_136*RL_14_256-OM_2_236*RL_14_156
  VI_14_156 = OR_14_156+OR_2_134
  VI_14_256 = OR_14_256+OR_2_234
  VI_14_356 = OR_14_356+OR_2_334
#
  OR_16_158 = OM_4_218*RL_16_358-OM_4_318*RL_16_258
  OR_16_258 = -(OM_4_118*RL_16_358-OM_4_318*RL_16_158)
  OR_16_358 = OM_4_118*RL_16_258-OM_4_218*RL_16_158
  VI_16_258 = OR_16_258+OR_4_216
  VI_16_358 = OR_16_358+OR_4_316
#
  OR_19_161 = OM_7_210*RL_19_361-OM_7_310*RL_19_261
  OR_19_261 = -(OM_7_110*RL_19_361-OM_7_310*RL_19_161)
  OR_19_361 = OM_7_110*RL_19_261-OM_7_210*RL_19_161
  VI_19_261 = OR_19_261+OR_7_28
  VI_19_361 = OR_19_361+OR_7_38

# = = Block_0_2_0_0_0_1 = = 
 
# Constraints Quadratic Terms 

#
  jdqd13 = VI_9_151*VI_9_151+VI_9_251*VI_9_251+VI_9_351*VI_9_351+(Apqp_1_225-OM_1_127*OR_9_351+OM_1_327*OR_9_151-\
   Ompqp_1_127*RL_9_351+Ompqp_1_327*RL_9_151)*(PO_1_225+RL_9_251-s.dpt[2,9])+(PO_1_125+RL_9_151-s.dpt[1,9])*(Apqp_1_125+\
   OM_1_227*OR_9_351-OM_1_327*OR_9_251+Ompqp_1_227*RL_9_351-Ompqp_1_327*RL_9_251)+(RL_1_325+RL_9_351-s.dpt[3,9])*(Apqp_1_325+\
   OM_1_127*OR_9_251-OM_1_227*OR_9_151+Ompqp_1_127*RL_9_251-Ompqp_1_227*RL_9_151)
#
  jdqd14 = VI_11_153*VI_11_153+VI_11_253*VI_11_253+VI_11_353*VI_11_353+(Apqp_1_225-OM_1_127*OR_11_353+OM_1_327*OR_11_153\
   -Ompqp_1_127*RL_11_353+Ompqp_1_327*RL_11_153)*(PO_1_225+RL_11_253-s.dpt[2,6])+(PO_1_125+RL_11_153-s.dpt[1,6])*(Apqp_1_125+\
   OM_1_227*OR_11_353-OM_1_327*OR_11_253+Ompqp_1_227*RL_11_353-Ompqp_1_327*RL_11_253)+(RL_11_353+RL_1_325-s.dpt[3,6])*(\
   Apqp_1_325+OM_1_127*OR_11_253-OM_1_227*OR_11_153+Ompqp_1_127*RL_11_253-Ompqp_1_227*RL_11_153)
#
  jdqd15 = VI_12_154*VI_12_154+VI_12_254*VI_12_254+VI_12_354*VI_12_354+(Apqp_2_234-OM_2_136*OR_12_354+OM_2_336*OR_12_154\
   -Ompqp_2_136*RL_12_354+Ompqp_2_336*RL_12_154)*(PO_2_234+RL_12_254-s.dpt[2,11])+(PO_2_134+RL_12_154-s.dpt[1,11])*(Apqp_2_134+\
   OM_2_236*OR_12_354-OM_2_336*OR_12_254+Ompqp_2_236*RL_12_354-Ompqp_2_336*RL_12_254)+(RL_12_354+RL_2_334-s.dpt[3,11])*(\
   Apqp_2_334+OM_2_136*OR_12_254-OM_2_236*OR_12_154+Ompqp_2_136*RL_12_254-Ompqp_2_236*RL_12_154)
#
  jdqd16 = VI_14_156*VI_14_156+VI_14_256*VI_14_256+VI_14_356*VI_14_356+(Apqp_2_234-OM_2_136*OR_14_356+OM_2_336*OR_14_156\
   -Ompqp_2_136*RL_14_356+Ompqp_2_336*RL_14_156)*(PO_2_234+RL_14_256-s.dpt[2,8])+(PO_2_134+RL_14_156-s.dpt[1,8])*(Apqp_2_134+\
   OM_2_236*OR_14_356-OM_2_336*OR_14_256+Ompqp_2_236*RL_14_356-Ompqp_2_336*RL_14_256)+(RL_14_356+RL_2_334-s.dpt[3,8])*(\
   Apqp_2_334+OM_2_136*OR_14_256-OM_2_236*OR_14_156+Ompqp_2_136*RL_14_256-Ompqp_2_236*RL_14_156)
#
  jdqd17 = OR_16_158*OR_16_158+VI_16_358*VI_16_358+(RL_16_358+RL_4_316)*(Apqp_4_316+OM_4_118*OR_16_258-OM_4_218*\
   OR_16_158+Ompqp_4_118*RL_16_258-Ompqp_4_218*RL_16_158)+(RL_16_158-s.dpt[1,13]+s.dpt[1,4])*(OM_4_218*OR_16_358-OM_4_318*\
   OR_16_258+Ompqp_4_218*RL_16_358-Ompqp_4_318*RL_16_258)+(Apqp_4_216-OM_4_118*OR_16_358+OM_4_318*OR_16_158-Ompqp_4_118*\
   RL_16_358+Ompqp_4_318*RL_16_158)*(RL_16_258+RL_4_216-q[41]-s.dpt[2,41]+s.dpt[2,4])+(VI_16_258-qd[41])*(VI_16_258-qd[41])
#
  jdqd18 = OR_19_161*OR_19_161+VI_19_361*VI_19_361+(RL_19_361+RL_7_38)*(Apqp_7_38+OM_7_110*OR_19_261-OM_7_210*OR_19_161+\
   Ompqp_7_110*RL_19_261-Ompqp_7_210*RL_19_161)+(RL_19_161-s.dpt[1,13]+s.dpt[1,1])*(OM_7_210*OR_19_361-OM_7_310*OR_19_261+\
   Ompqp_7_210*RL_19_361-Ompqp_7_310*RL_19_261)+(Apqp_7_28-OM_7_110*OR_19_361+OM_7_310*OR_19_161-Ompqp_7_110*RL_19_361+\
   Ompqp_7_310*RL_19_161)*(RL_19_261+RL_7_28-q[41]+s.dpt[2,1]-s.dpt[2,40])+(VI_19_261-qd[41])*(VI_19_261-qd[41])

# = = Block_0_3_0_0_0_0 = = 
 
# Symbolic Outputs  

  Jdqd[1] = -Apqp_1_143
  Jdqd[2] = -Apqp_1_243
  Jdqd[3] = -Apqp_1_343
  Jdqd[4] = Apqp_2_144
  Jdqd[5] = Apqp_2_244
  Jdqd[6] = Apqp_2_344
  Jdqd[7] = Apqp_4_146
  Jdqd[8] = Apqp_4_246
  Jdqd[9] = Apqp_4_346
  Jdqd[10] = -Apqp_7_149
  Jdqd[11] = -Apqp_7_249
  Jdqd[12] = -Apqp_7_349
  Jdqd[13] = jdqd13
  Jdqd[14] = jdqd14
  Jdqd[15] = jdqd15
  Jdqd[16] = jdqd16
  Jdqd[17] = jdqd17
  Jdqd[18] = jdqd18

# ====== END Task 0 ====== 

  

