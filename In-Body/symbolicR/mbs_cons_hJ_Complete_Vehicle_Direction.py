#
#-------------------------------------------------------------
#
#	ROBOTRAN - Version 6.6 (build : february 22, 2008)
#
#	Copyright 
#	Universite catholique de Louvain 
#	Departement de Mecanique 
#	Unite de Production Mecanique et Machines 
#	2, Place du Levant 
#	1348 Louvain-la-Neuve 
#	http://www.robotran.be// 
#
#	==> Generation Date : Fri Apr  3 02:23:56 2020
#
#	==> Project name : Complete_Vehicle_Direction
#	==> using XML input file 
#
#	==> Number of joints : 41
#
#	==> Function : F 8 : Constraints Vector (h) and Jacobian Matrix (Jac) 
#	==> Flops complexity : 1317
#
#	==> Generation Time :  0.040 seconds
#	==> Post-Processing :  0.030 seconds
#
#-------------------------------------------------------------
#
import numpy as np  

def cons_hJ(h,Jac,s):   
  q = s.q
  qd = s.qd
  qdd = s.qdd

# === begin imp_aux === 

# === end imp_aux === 

# ===== BEGIN task 0 ===== 

# = = Block_0_0_0_0_0_2 = = 
 
# Trigonometric Variables  

  C7 = np.cos(q[7])
  S7 = np.sin(q[7])
  C8 = np.cos(q[8])
  S8 = np.sin(q[8])
  C9 = np.cos(q[9])
  S9 = np.sin(q[9])
  C10 = np.cos(q[10])
  S10 = np.sin(q[10])

# = = Block_0_0_0_0_0_3 = = 
 
# Trigonometric Variables  

  C11 = np.cos(q[11])
  S11 = np.sin(q[11])

# = = Block_0_0_0_0_0_5 = = 
 
# Trigonometric Variables  

  C15 = np.cos(q[15])
  S15 = np.sin(q[15])
  C16 = np.cos(q[16])
  S16 = np.sin(q[16])
  C17 = np.cos(q[17])
  S17 = np.sin(q[17])
  C18 = np.cos(q[18])
  S18 = np.sin(q[18])

# = = Block_0_0_0_0_0_6 = = 
 
# Trigonometric Variables  

  C19 = np.cos(q[19])
  S19 = np.sin(q[19])

# = = Block_0_0_0_0_0_8 = = 
 
# Trigonometric Variables  

  C23 = np.cos(q[23])
  S23 = np.sin(q[23])
  C24 = np.cos(q[24])
  S24 = np.sin(q[24])
  C25 = np.cos(q[25])
  S25 = np.sin(q[25])
  C26 = np.cos(q[26])
  S26 = np.sin(q[26])
  C27 = np.cos(q[27])
  S27 = np.sin(q[27])

# = = Block_0_0_0_0_0_9 = = 
 
# Trigonometric Variables  

  C28 = np.cos(q[28])
  S28 = np.sin(q[28])

# = = Block_0_0_0_0_0_11 = = 
 
# Trigonometric Variables  

  C32 = np.cos(q[32])
  S32 = np.sin(q[32])
  C33 = np.cos(q[33])
  S33 = np.sin(q[33])
  C34 = np.cos(q[34])
  S34 = np.sin(q[34])
  C35 = np.cos(q[35])
  S35 = np.sin(q[35])
  C36 = np.cos(q[36])
  S36 = np.sin(q[36])

# = = Block_0_0_0_0_0_12 = = 
 
# Trigonometric Variables  

  C37 = np.cos(q[37])
  S37 = np.sin(q[37])

# = = Block_0_1_0_0_0_2 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_7_28 = C7*S8
  RO_7_38 = S7*S8
  RO_7_58 = C7*C8
  RO_7_68 = S7*C8
  RO_7_49 = -S8*C9
  RO_7_59 = RO_7_58*C9-S7*S9
  RO_7_69 = RO_7_68*C9+C7*S9
  RO_7_79 = S8*S9
  RO_7_89 = -(RO_7_58*S9+S7*C9)
  RO_7_99 = -(RO_7_68*S9-C7*C9)
  RO_7_110 = -(RO_7_79*S10-C10*C8)
  RO_7_210 = RO_7_28*C10-RO_7_89*S10
  RO_7_310 = RO_7_38*C10-RO_7_99*S10
  RO_7_710 = RO_7_79*C10+S10*C8
  RO_7_810 = RO_7_28*S10+RO_7_89*C10
  RO_7_910 = RO_7_38*S10+RO_7_99*C10
  RL_7_28 = s.dpt[2,14]*C7
  RL_7_38 = s.dpt[2,14]*S7
  PO_7_28 = RL_7_28+s.dpt[2,1]
#
  RL_19_161 = RO_7_110*s.dpt[1,17]+RO_7_49*s.dpt[2,17]
  RL_19_261 = RO_7_210*s.dpt[1,17]+RO_7_59*s.dpt[2,17]
  RL_19_361 = RO_7_310*s.dpt[1,17]+RO_7_69*s.dpt[2,17]
  PO_19_361 = RL_19_361+RL_7_38

# = = Block_0_1_0_0_0_3 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_7_711 = -(RO_7_49*S11-RO_7_710*C11)
  RO_7_811 = -(RO_7_59*S11-RO_7_810*C11)
  RO_7_911 = -(RO_7_69*S11-RO_7_910*C11)
  RL_7_111 = RO_7_710*s.dpt[3,15]
  RL_7_211 = RO_7_810*s.dpt[3,15]
  RL_7_311 = RO_7_910*s.dpt[3,15]
  RL_7_112 = RO_7_711*q[12]
  RL_7_212 = RO_7_811*q[12]
  RL_7_312 = RO_7_911*q[12]
  RL_7_149 = RO_7_711*s.dpt[3,18]
  RL_7_249 = RO_7_811*s.dpt[3,18]
  RL_7_349 = RO_7_911*s.dpt[3,18]
  JT_7_249_7 = -(RL_7_311+RL_7_312+RL_7_349+RL_7_38)
  JT_7_349_7 = RL_7_211+RL_7_212+RL_7_249+RL_7_28
  JT_7_149_8 = -(RL_7_349*S7+C7*(RL_7_211+RL_7_212+RL_7_249)+S7*(RL_7_311+RL_7_312))
  JT_7_249_8 = C7*(RL_7_111+RL_7_112+RL_7_149)
  JT_7_349_8 = S7*(RL_7_111+RL_7_112+RL_7_149)
  JT_7_149_9 = RO_7_28*(RL_7_311+RL_7_312)-RO_7_38*(RL_7_211+RL_7_212)-RL_7_249*RO_7_38+RL_7_349*RO_7_28
  JT_7_249_9 = -(RL_7_349*C8-RO_7_38*(RL_7_111+RL_7_112+RL_7_149)+C8*(RL_7_311+RL_7_312))
  JT_7_349_9 = RL_7_249*C8-RO_7_28*(RL_7_111+RL_7_112+RL_7_149)+C8*(RL_7_211+RL_7_212)
  JT_7_149_10 = RO_7_59*(RL_7_311+RL_7_312)-RO_7_69*(RL_7_211+RL_7_212)-RL_7_249*RO_7_69+RL_7_349*RO_7_59
  JT_7_249_10 = RL_7_149*RO_7_69-RL_7_349*RO_7_49-RO_7_49*(RL_7_311+RL_7_312)+RO_7_69*(RL_7_111+RL_7_112)
  JT_7_349_10 = RO_7_49*(RL_7_211+RL_7_212)-RO_7_59*(RL_7_111+RL_7_112)-RL_7_149*RO_7_59+RL_7_249*RO_7_49
  JT_7_149_11 = RO_7_210*(RL_7_312+RL_7_349)-RO_7_310*(RL_7_212+RL_7_249)
  JT_7_249_11 = -(RO_7_110*(RL_7_312+RL_7_349)-RO_7_310*(RL_7_112+RL_7_149))
  JT_7_349_11 = RO_7_110*(RL_7_212+RL_7_249)-RO_7_210*(RL_7_112+RL_7_149)

# = = Block_0_1_0_0_0_5 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_4_216 = C15*S16
  RO_4_316 = S15*S16
  RO_4_516 = C15*C16
  RO_4_616 = S15*C16
  RO_4_417 = -S16*C17
  RO_4_517 = RO_4_516*C17-S15*S17
  RO_4_617 = RO_4_616*C17+C15*S17
  RO_4_717 = S16*S17
  RO_4_817 = -(RO_4_516*S17+S15*C17)
  RO_4_917 = -(RO_4_616*S17-C15*C17)
  RO_4_118 = -(RO_4_717*S18-C16*C18)
  RO_4_218 = RO_4_216*C18-RO_4_817*S18
  RO_4_318 = RO_4_316*C18-RO_4_917*S18
  RO_4_718 = RO_4_717*C18+C16*S18
  RO_4_818 = RO_4_216*S18+RO_4_817*C18
  RO_4_918 = RO_4_316*S18+RO_4_917*C18
  RL_4_216 = s.dpt[2,20]*C15
  RL_4_316 = s.dpt[2,20]*S15
  PO_4_216 = RL_4_216+s.dpt[2,4]
#
  RL_16_158 = RO_4_118*s.dpt[1,23]+RO_4_417*s.dpt[2,23]
  RL_16_258 = RO_4_218*s.dpt[1,23]+RO_4_517*s.dpt[2,23]
  RL_16_358 = RO_4_318*s.dpt[1,23]+RO_4_617*s.dpt[2,23]
  PO_16_358 = RL_16_358+RL_4_316

# = = Block_0_1_0_0_0_6 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_4_719 = -(RO_4_417*S19-RO_4_718*C19)
  RO_4_819 = -(RO_4_517*S19-RO_4_818*C19)
  RO_4_919 = -(RO_4_617*S19-RO_4_918*C19)
  RL_4_119 = RO_4_718*s.dpt[3,21]
  RL_4_219 = RO_4_818*s.dpt[3,21]
  RL_4_319 = RO_4_918*s.dpt[3,21]
  RL_4_120 = RO_4_719*q[20]
  RL_4_220 = RO_4_819*q[20]
  RL_4_320 = RO_4_919*q[20]
  RL_4_146 = RO_4_719*s.dpt[3,24]
  RL_4_246 = RO_4_819*s.dpt[3,24]
  RL_4_346 = RO_4_919*s.dpt[3,24]
  JT_4_246_15 = -(RL_4_316+RL_4_319+RL_4_320+RL_4_346)
  JT_4_346_15 = RL_4_216+RL_4_219+RL_4_220+RL_4_246
  JT_4_146_16 = -(RL_4_346*S15+C15*(RL_4_219+RL_4_220+RL_4_246)+S15*(RL_4_319+RL_4_320))
  JT_4_246_16 = C15*(RL_4_119+RL_4_120+RL_4_146)
  JT_4_346_16 = S15*(RL_4_119+RL_4_120+RL_4_146)
  JT_4_146_17 = RO_4_216*(RL_4_319+RL_4_320)-RO_4_316*(RL_4_219+RL_4_220)-RL_4_246*RO_4_316+RL_4_346*RO_4_216
  JT_4_246_17 = -(RL_4_346*C16-RO_4_316*(RL_4_119+RL_4_120+RL_4_146)+C16*(RL_4_319+RL_4_320))
  JT_4_346_17 = RL_4_246*C16-RO_4_216*(RL_4_119+RL_4_120+RL_4_146)+C16*(RL_4_219+RL_4_220)
  JT_4_146_18 = RO_4_517*(RL_4_319+RL_4_320)-RO_4_617*(RL_4_219+RL_4_220)-RL_4_246*RO_4_617+RL_4_346*RO_4_517
  JT_4_246_18 = RL_4_146*RO_4_617-RL_4_346*RO_4_417-RO_4_417*(RL_4_319+RL_4_320)+RO_4_617*(RL_4_119+RL_4_120)
  JT_4_346_18 = RO_4_417*(RL_4_219+RL_4_220)-RO_4_517*(RL_4_119+RL_4_120)-RL_4_146*RO_4_517+RL_4_246*RO_4_417
  JT_4_146_19 = RO_4_218*(RL_4_320+RL_4_346)-RO_4_318*(RL_4_220+RL_4_246)
  JT_4_246_19 = -(RO_4_118*(RL_4_320+RL_4_346)-RO_4_318*(RL_4_120+RL_4_146))
  JT_4_346_19 = RO_4_118*(RL_4_220+RL_4_246)-RO_4_218*(RL_4_120+RL_4_146)

# = = Block_0_1_0_0_0_8 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_1_224 = C23*S24
  RO_1_324 = S23*S24
  RO_1_524 = C23*C24
  RO_1_624 = S23*C24
  RO_1_425 = -S24*C25
  RO_1_525 = RO_1_524*C25-S23*S25
  RO_1_625 = RO_1_624*C25+C23*S25
  RO_1_725 = S24*S25
  RO_1_825 = -(RO_1_524*S25+S23*C25)
  RO_1_925 = -(RO_1_624*S25-C23*C25)
  RO_1_126 = -(RO_1_725*S26-C24*C26)
  RO_1_226 = RO_1_224*C26-RO_1_825*S26
  RO_1_326 = RO_1_324*C26-RO_1_925*S26
  RO_1_726 = RO_1_725*C26+C24*S26
  RO_1_826 = RO_1_224*S26+RO_1_825*C26
  RO_1_926 = RO_1_324*S26+RO_1_925*C26
  RO_1_127 = RO_1_126*C27+RO_1_425*S27
  RO_1_227 = RO_1_226*C27+RO_1_525*S27
  RO_1_327 = RO_1_326*C27+RO_1_625*S27
  RL_1_125 = -s.dpt[2,26]*S24
  RL_1_225 = RO_1_524*s.dpt[2,26]
  RL_1_325 = RO_1_624*s.dpt[2,26]
  PO_1_125 = RL_1_125+s.dpt[1,10]
  PO_1_225 = RL_1_225+s.dpt[2,10]
  JT_1_125_24 = -s.dpt[2,26]*C24
  JT_1_225_24 = RL_1_125*C23
  JT_1_325_24 = RL_1_125*S23
#
  RL_9_151 = RO_1_127*s.dpt[1,30]+RO_1_726*s.dpt[3,30]
  RL_9_251 = RO_1_227*s.dpt[1,30]+RO_1_826*s.dpt[3,30]
  RL_9_351 = RO_1_327*s.dpt[1,30]+RO_1_926*s.dpt[3,30]
#
  RL_11_153 = RO_1_127*s.dpt[1,29]+RO_1_726*s.dpt[3,29]
  RL_11_253 = RO_1_227*s.dpt[1,29]+RO_1_826*s.dpt[3,29]
  RL_11_353 = RO_1_327*s.dpt[1,29]+RO_1_926*s.dpt[3,29]

# = = Block_0_1_0_0_0_9 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_1_728 = RO_1_726*C28+S28*(RO_1_126*S27-RO_1_425*C27)
  RO_1_828 = RO_1_826*C28+S28*(RO_1_226*S27-RO_1_525*C27)
  RO_1_928 = RO_1_926*C28+S28*(RO_1_326*S27-RO_1_625*C27)
  RL_1_128 = RO_1_726*s.dpt[3,27]
  RL_1_228 = RO_1_826*s.dpt[3,27]
  RL_1_328 = RO_1_926*s.dpt[3,27]
  RL_1_129 = RO_1_728*q[29]
  RL_1_229 = RO_1_828*q[29]
  RL_1_329 = RO_1_928*q[29]
  RL_1_143 = RO_1_728*s.dpt[3,31]
  RL_1_243 = RO_1_828*s.dpt[3,31]
  RL_1_343 = RO_1_928*s.dpt[3,31]
  JT_1_243_23 = -(RL_1_325+RL_1_328+RL_1_329+RL_1_343)
  JT_1_343_23 = RL_1_225+RL_1_228+RL_1_229+RL_1_243
  JT_1_143_24 = JT_1_125_24-RL_1_228*C23-RL_1_229*C23-RL_1_243*C23-RL_1_328*S23-RL_1_329*S23-RL_1_343*S23
  JT_1_243_24 = JT_1_225_24+RL_1_128*C23+RL_1_129*C23+RL_1_143*C23
  JT_1_343_24 = JT_1_325_24+RL_1_128*S23+RL_1_129*S23+RL_1_143*S23
  JT_1_143_25 = RO_1_224*(RL_1_328+RL_1_329)-RO_1_324*(RL_1_228+RL_1_229)-RL_1_243*RO_1_324+RL_1_343*RO_1_224
  JT_1_243_25 = -(RL_1_343*C24-RO_1_324*(RL_1_128+RL_1_129+RL_1_143)+C24*(RL_1_328+RL_1_329))
  JT_1_343_25 = RL_1_243*C24-RO_1_224*(RL_1_128+RL_1_129+RL_1_143)+C24*(RL_1_228+RL_1_229)
  JT_1_143_26 = RO_1_525*(RL_1_328+RL_1_329)-RO_1_625*(RL_1_228+RL_1_229)-RL_1_243*RO_1_625+RL_1_343*RO_1_525
  JT_1_243_26 = RL_1_143*RO_1_625-RL_1_343*RO_1_425-RO_1_425*(RL_1_328+RL_1_329)+RO_1_625*(RL_1_128+RL_1_129)
  JT_1_343_26 = RO_1_425*(RL_1_228+RL_1_229)-RO_1_525*(RL_1_128+RL_1_129)-RL_1_143*RO_1_525+RL_1_243*RO_1_425
  JT_1_143_27 = RO_1_826*(RL_1_328+RL_1_329)-RO_1_926*(RL_1_228+RL_1_229)-RL_1_243*RO_1_926+RL_1_343*RO_1_826
  JT_1_243_27 = RL_1_143*RO_1_926-RL_1_343*RO_1_726-RO_1_726*(RL_1_328+RL_1_329)+RO_1_926*(RL_1_128+RL_1_129)
  JT_1_343_27 = RO_1_726*(RL_1_228+RL_1_229)-RO_1_826*(RL_1_128+RL_1_129)-RL_1_143*RO_1_826+RL_1_243*RO_1_726
  JT_1_143_28 = RO_1_227*(RL_1_329+RL_1_343)-RO_1_327*(RL_1_229+RL_1_243)
  JT_1_243_28 = -(RO_1_127*(RL_1_329+RL_1_343)-RO_1_327*(RL_1_129+RL_1_143))
  JT_1_343_28 = RO_1_127*(RL_1_229+RL_1_243)-RO_1_227*(RL_1_129+RL_1_143)

# = = Block_0_1_0_0_0_11 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_2_233 = C32*S33
  RO_2_333 = S32*S33
  RO_2_533 = C32*C33
  RO_2_633 = S32*C33
  RO_2_434 = -S33*C34
  RO_2_534 = RO_2_533*C34-S32*S34
  RO_2_634 = RO_2_633*C34+C32*S34
  RO_2_734 = S33*S34
  RO_2_834 = -(RO_2_533*S34+S32*C34)
  RO_2_934 = -(RO_2_633*S34-C32*C34)
  RO_2_135 = -(RO_2_734*S35-C33*C35)
  RO_2_235 = RO_2_233*C35-RO_2_834*S35
  RO_2_335 = RO_2_333*C35-RO_2_934*S35
  RO_2_735 = RO_2_734*C35+C33*S35
  RO_2_835 = RO_2_233*S35+RO_2_834*C35
  RO_2_935 = RO_2_333*S35+RO_2_934*C35
  RO_2_136 = RO_2_135*C36+RO_2_434*S36
  RO_2_236 = RO_2_235*C36+RO_2_534*S36
  RO_2_336 = RO_2_335*C36+RO_2_634*S36
  RL_2_134 = -s.dpt[2,33]*S33
  RL_2_234 = RO_2_533*s.dpt[2,33]
  RL_2_334 = RO_2_633*s.dpt[2,33]
  PO_2_134 = RL_2_134+s.dpt[1,12]
  PO_2_234 = RL_2_234+s.dpt[2,12]
  JT_2_134_33 = -s.dpt[2,33]*C33
  JT_2_234_33 = RL_2_134*C32
  JT_2_334_33 = RL_2_134*S32
#
  RL_12_154 = RO_2_136*s.dpt[1,34]+RO_2_735*s.dpt[3,34]
  RL_12_254 = RO_2_236*s.dpt[1,34]+RO_2_835*s.dpt[3,34]
  RL_12_354 = RO_2_336*s.dpt[1,34]+RO_2_935*s.dpt[3,34]
#
  RL_14_156 = RO_2_136*s.dpt[1,35]+RO_2_735*s.dpt[3,35]
  RL_14_256 = RO_2_236*s.dpt[1,35]+RO_2_835*s.dpt[3,35]
  RL_14_356 = RO_2_336*s.dpt[1,35]+RO_2_935*s.dpt[3,35]

# = = Block_0_1_0_0_0_12 = = 
 
# Constraints and Constraints Jacobian 

#
  RO_2_737 = RO_2_735*C37+S37*(RO_2_135*S36-RO_2_434*C36)
  RO_2_837 = RO_2_835*C37+S37*(RO_2_235*S36-RO_2_534*C36)
  RO_2_937 = RO_2_935*C37+S37*(RO_2_335*S36-RO_2_634*C36)
  RL_2_137 = RO_2_735*s.dpt[3,36]
  RL_2_237 = RO_2_835*s.dpt[3,36]
  RL_2_337 = RO_2_935*s.dpt[3,36]
  RL_2_138 = RO_2_737*q[38]
  RL_2_238 = RO_2_837*q[38]
  RL_2_338 = RO_2_937*q[38]
  RL_2_144 = RO_2_737*s.dpt[3,38]
  RL_2_244 = RO_2_837*s.dpt[3,38]
  RL_2_344 = RO_2_937*s.dpt[3,38]
  JT_2_244_32 = -(RL_2_334+RL_2_337+RL_2_338+RL_2_344)
  JT_2_344_32 = RL_2_234+RL_2_237+RL_2_238+RL_2_244
  JT_2_144_33 = JT_2_134_33-RL_2_237*C32-RL_2_238*C32-RL_2_244*C32-RL_2_337*S32-RL_2_338*S32-RL_2_344*S32
  JT_2_244_33 = JT_2_234_33+RL_2_137*C32+RL_2_138*C32+RL_2_144*C32
  JT_2_344_33 = JT_2_334_33+RL_2_137*S32+RL_2_138*S32+RL_2_144*S32
  JT_2_144_34 = RO_2_233*(RL_2_337+RL_2_338)-RO_2_333*(RL_2_237+RL_2_238)-RL_2_244*RO_2_333+RL_2_344*RO_2_233
  JT_2_244_34 = -(RL_2_344*C33-RO_2_333*(RL_2_137+RL_2_138+RL_2_144)+C33*(RL_2_337+RL_2_338))
  JT_2_344_34 = RL_2_244*C33-RO_2_233*(RL_2_137+RL_2_138+RL_2_144)+C33*(RL_2_237+RL_2_238)
  JT_2_144_35 = RO_2_534*(RL_2_337+RL_2_338)-RO_2_634*(RL_2_237+RL_2_238)-RL_2_244*RO_2_634+RL_2_344*RO_2_534
  JT_2_244_35 = RL_2_144*RO_2_634-RL_2_344*RO_2_434-RO_2_434*(RL_2_337+RL_2_338)+RO_2_634*(RL_2_137+RL_2_138)
  JT_2_344_35 = RO_2_434*(RL_2_237+RL_2_238)-RO_2_534*(RL_2_137+RL_2_138)-RL_2_144*RO_2_534+RL_2_244*RO_2_434
  JT_2_144_36 = RO_2_835*(RL_2_337+RL_2_338)-RO_2_935*(RL_2_237+RL_2_238)-RL_2_244*RO_2_935+RL_2_344*RO_2_835
  JT_2_244_36 = RL_2_144*RO_2_935-RL_2_344*RO_2_735-RO_2_735*(RL_2_337+RL_2_338)+RO_2_935*(RL_2_137+RL_2_138)
  JT_2_344_36 = RO_2_735*(RL_2_237+RL_2_238)-RO_2_835*(RL_2_137+RL_2_138)-RL_2_144*RO_2_835+RL_2_244*RO_2_735
  JT_2_144_37 = RO_2_236*(RL_2_338+RL_2_344)-RO_2_336*(RL_2_238+RL_2_244)
  JT_2_244_37 = -(RO_2_136*(RL_2_338+RL_2_344)-RO_2_336*(RL_2_138+RL_2_144))
  JT_2_344_37 = RO_2_136*(RL_2_238+RL_2_244)-RO_2_236*(RL_2_138+RL_2_144)

# = = Block_0_1_0_0_1_0 = = 
 
# Constraints and Constraints Jacobian 

#
  h_1 = -(PO_1_125+RL_1_128+RL_1_129+RL_1_143-s.dpt[1,5])
  h_2 = -(PO_1_225+RL_1_228+RL_1_229+RL_1_243-s.dpt[2,5])
  h_3 = -(RL_1_325+RL_1_328+RL_1_329+RL_1_343-s.dpt[3,5])
#
  h_4 = PO_2_134+RL_2_137+RL_2_138+RL_2_144-s.dpt[1,7]
  h_5 = PO_2_234+RL_2_237+RL_2_238+RL_2_244-s.dpt[2,7]
  h_6 = RL_2_334+RL_2_337+RL_2_338+RL_2_344-s.dpt[3,7]
#
  h_7 = RL_4_119+RL_4_120+RL_4_146-s.dpt[1,2]+s.dpt[1,4]
  h_8 = PO_4_216+RL_4_219+RL_4_220+RL_4_246-s.dpt[2,2]
  h_9 = RL_4_316+RL_4_319+RL_4_320+RL_4_346-s.dpt[3,2]
#
  h_10 = -(RL_7_111+RL_7_112+RL_7_149+s.dpt[1,1]-s.dpt[1,3])
  h_11 = -(PO_7_28+RL_7_211+RL_7_212+RL_7_249-s.dpt[2,3])
  h_12 = -(RL_7_311+RL_7_312+RL_7_349+RL_7_38-s.dpt[3,3])
#
  Plp11 = -(PO_1_125+RL_9_151-s.dpt[1,9])
  Plp21 = -(PO_1_225+RL_9_251-s.dpt[2,9])
  Plp31 = -(RL_1_325+RL_9_351-s.dpt[3,9])
  h_13 = (0.50)*(Plp11*Plp11+Plp21*Plp21+Plp31*Plp31-s.lrod[1]*s.lrod[1])
#
  Jacu_13_23 = Plp21*(RL_1_325+RL_9_351)-Plp31*(RL_1_225+RL_9_251)
  Jac_13_24 = -(Plp11*(JT_1_125_24-RL_9_251*C23-RL_9_351*S23)+Plp21*(JT_1_225_24+RL_9_151*C23)+Plp31*(JT_1_325_24+\
   RL_9_151*S23))
  Jac_13_25 = Plp11*(RL_9_251*RO_1_324-RL_9_351*RO_1_224)-Plp21*(RL_9_151*RO_1_324-RL_9_351*C24)+Plp31*(RL_9_151*\
   RO_1_224-RL_9_251*C24)
  Jac_13_26 = Plp11*(RL_9_251*RO_1_625-RL_9_351*RO_1_525)-Plp21*(RL_9_151*RO_1_625-RL_9_351*RO_1_425)+Plp31*(RL_9_151*\
   RO_1_525-RL_9_251*RO_1_425)
  Jac_13_27 = Plp11*(RL_9_251*RO_1_926-RL_9_351*RO_1_826)-Plp21*(RL_9_151*RO_1_926-RL_9_351*RO_1_726)+Plp31*(RL_9_151*\
   RO_1_826-RL_9_251*RO_1_726)
#
  Plp12 = -(PO_1_125+RL_11_153-s.dpt[1,6])
  Plp22 = -(PO_1_225+RL_11_253-s.dpt[2,6])
  Plp32 = -(RL_11_353+RL_1_325-s.dpt[3,6])
  h_14 = (0.50)*(Plp12*Plp12+Plp22*Plp22+Plp32*Plp32-s.lrod[2]*s.lrod[2])
#
  Jacu_14_23 = Plp22*(RL_11_353+RL_1_325)-Plp32*(RL_11_253+RL_1_225)
  Jac_14_24 = -(Plp12*(JT_1_125_24-RL_11_253*C23-RL_11_353*S23)+Plp22*(JT_1_225_24+RL_11_153*C23)+Plp32*(JT_1_325_24+\
   RL_11_153*S23))
  Jac_14_25 = Plp12*(RL_11_253*RO_1_324-RL_11_353*RO_1_224)-Plp22*(RL_11_153*RO_1_324-RL_11_353*C24)+Plp32*(RL_11_153*\
   RO_1_224-RL_11_253*C24)
  Jac_14_26 = Plp12*(RL_11_253*RO_1_625-RL_11_353*RO_1_525)-Plp22*(RL_11_153*RO_1_625-RL_11_353*RO_1_425)+Plp32*(\
   RL_11_153*RO_1_525-RL_11_253*RO_1_425)
  Jac_14_27 = Plp12*(RL_11_253*RO_1_926-RL_11_353*RO_1_826)-Plp22*(RL_11_153*RO_1_926-RL_11_353*RO_1_726)+Plp32*(\
   RL_11_153*RO_1_826-RL_11_253*RO_1_726)
#
  Plp13 = PO_2_134+RL_12_154-s.dpt[1,11]
  Plp23 = PO_2_234+RL_12_254-s.dpt[2,11]
  Plp33 = RL_12_354+RL_2_334-s.dpt[3,11]
  h_15 = (0.50)*(Plp13*Plp13+Plp23*Plp23+Plp33*Plp33-s.lrod[3]*s.lrod[3])
#
  Jacu_15_32 = (RL_12_254+RL_2_234)*Plp33-Plp23*(RL_12_354+RL_2_334)
  Jac_15_33 = Plp13*(JT_2_134_33-RL_12_254*C32-RL_12_354*S32)+Plp23*(JT_2_234_33+RL_12_154*C32)+Plp33*(JT_2_334_33+\
   RL_12_154*S32)
  Jac_15_34 = -(Plp13*(RL_12_254*RO_2_333-RL_12_354*RO_2_233)-Plp23*(RL_12_154*RO_2_333-RL_12_354*C33)+Plp33*(RL_12_154*\
   RO_2_233-RL_12_254*C33))
  Jac_15_35 = -(Plp13*(RL_12_254*RO_2_634-RL_12_354*RO_2_534)-Plp23*(RL_12_154*RO_2_634-RL_12_354*RO_2_434)+Plp33*(\
   RL_12_154*RO_2_534-RL_12_254*RO_2_434))
  Jac_15_36 = -(Plp13*(RL_12_254*RO_2_935-RL_12_354*RO_2_835)-Plp23*(RL_12_154*RO_2_935-RL_12_354*RO_2_735)+Plp33*(\
   RL_12_154*RO_2_835-RL_12_254*RO_2_735))
#
  Plp14 = PO_2_134+RL_14_156-s.dpt[1,8]
  Plp24 = PO_2_234+RL_14_256-s.dpt[2,8]
  Plp34 = RL_14_356+RL_2_334-s.dpt[3,8]
  h_16 = (0.50)*(Plp14*Plp14+Plp24*Plp24+Plp34*Plp34-s.lrod[4]*s.lrod[4])
#
  Jacu_16_32 = (RL_14_256+RL_2_234)*Plp34-Plp24*(RL_14_356+RL_2_334)
  Jac_16_33 = Plp14*(JT_2_134_33-RL_14_256*C32-RL_14_356*S32)+Plp24*(JT_2_234_33+RL_14_156*C32)+Plp34*(JT_2_334_33+\
   RL_14_156*S32)
  Jac_16_34 = -(Plp14*(RL_14_256*RO_2_333-RL_14_356*RO_2_233)-Plp24*(RL_14_156*RO_2_333-RL_14_356*C33)+Plp34*(RL_14_156*\
   RO_2_233-RL_14_256*C33))
  Jac_16_35 = -(Plp14*(RL_14_256*RO_2_634-RL_14_356*RO_2_534)-Plp24*(RL_14_156*RO_2_634-RL_14_356*RO_2_434)+Plp34*(\
   RL_14_156*RO_2_534-RL_14_256*RO_2_434))
  Jac_16_36 = -(Plp14*(RL_14_256*RO_2_935-RL_14_356*RO_2_835)-Plp24*(RL_14_156*RO_2_935-RL_14_356*RO_2_735)+Plp34*(\
   RL_14_156*RO_2_835-RL_14_256*RO_2_735))
#
  Plp15 = RL_16_158-s.dpt[1,13]+s.dpt[1,4]
  Plp25 = PO_4_216+RL_16_258-q[41]-s.dpt[2,41]
  h_17 = (0.50)*(PO_16_358*PO_16_358+Plp15*Plp15+Plp25*Plp25-s.lrod[5]*s.lrod[5])
#
  Jacu_17_15 = PO_16_358*(RL_16_258+RL_4_216)-Plp25*(RL_16_358+RL_4_316)
  Jac_17_16 = PO_16_358*RL_16_158*S15-Plp15*(RL_16_258*C15+RL_16_358*S15)+Plp25*RL_16_158*C15
  Jac_17_17 = -(PO_16_358*(RL_16_158*RO_4_216-RL_16_258*C16)+Plp15*(RL_16_258*RO_4_316-RL_16_358*RO_4_216)-Plp25*(\
   RL_16_158*RO_4_316-RL_16_358*C16))
  Jac_17_18 = -(PO_16_358*(RL_16_158*RO_4_517-RL_16_258*RO_4_417)+Plp15*(RL_16_258*RO_4_617-RL_16_358*RO_4_517)-Plp25*(\
   RL_16_158*RO_4_617-RL_16_358*RO_4_417))
#
  Plp16 = -(RL_19_161-s.dpt[1,13]+s.dpt[1,1])
  Plp26 = q[41]+s.dpt[2,40]-(PO_7_28+RL_19_261)
  h_18 = (0.50)*(PO_19_361*PO_19_361+Plp16*Plp16+Plp26*Plp26-s.lrod[6]*s.lrod[6])
#
  Jacu_18_7 = PO_19_361*(RL_19_261+RL_7_28)+Plp26*(RL_19_361+RL_7_38)
  Jac_18_8 = PO_19_361*RL_19_161*S7+Plp16*(RL_19_261*C7+RL_19_361*S7)-Plp26*RL_19_161*C7
  Jac_18_9 = -(PO_19_361*(RL_19_161*RO_7_28-RL_19_261*C8)-Plp16*(RL_19_261*RO_7_38-RL_19_361*RO_7_28)+Plp26*(RL_19_161*\
   RO_7_38-RL_19_361*C8))
  Jac_18_10 = -(PO_19_361*(RL_19_161*RO_7_59-RL_19_261*RO_7_49)-Plp16*(RL_19_261*RO_7_69-RL_19_361*RO_7_59)+Plp26*(\
   RL_19_161*RO_7_69-RL_19_361*RO_7_49))

# = = Block_0_3_0_0_0_0 = = 
 
# Symbolic Outputs  

  h[1] = h_1
  h[2] = h_2
  h[3] = h_3
  h[4] = h_4
  h[5] = h_5
  h[6] = h_6
  h[7] = h_7
  h[8] = h_8
  h[9] = h_9
  h[10] = h_10
  h[11] = h_11
  h[12] = h_12
  h[13] = h_13
  h[14] = h_14
  h[15] = h_15
  h[16] = h_16
  h[17] = h_17
  h[18] = h_18
  Jac[1,24] = -JT_1_143_24
  Jac[1,25] = -JT_1_143_25
  Jac[1,26] = -JT_1_143_26
  Jac[1,27] = -JT_1_143_27
  Jac[1,28] = -JT_1_143_28
  Jac[1,29] = -RO_1_728
  Jac[2,23] = -JT_1_243_23
  Jac[2,24] = -JT_1_243_24
  Jac[2,25] = -JT_1_243_25
  Jac[2,26] = -JT_1_243_26
  Jac[2,27] = -JT_1_243_27
  Jac[2,28] = -JT_1_243_28
  Jac[2,29] = -RO_1_828
  Jac[3,23] = -JT_1_343_23
  Jac[3,24] = -JT_1_343_24
  Jac[3,25] = -JT_1_343_25
  Jac[3,26] = -JT_1_343_26
  Jac[3,27] = -JT_1_343_27
  Jac[3,28] = -JT_1_343_28
  Jac[3,29] = -RO_1_928
  Jac[4,33] = JT_2_144_33
  Jac[4,34] = JT_2_144_34
  Jac[4,35] = JT_2_144_35
  Jac[4,36] = JT_2_144_36
  Jac[4,37] = JT_2_144_37
  Jac[4,38] = RO_2_737
  Jac[5,32] = JT_2_244_32
  Jac[5,33] = JT_2_244_33
  Jac[5,34] = JT_2_244_34
  Jac[5,35] = JT_2_244_35
  Jac[5,36] = JT_2_244_36
  Jac[5,37] = JT_2_244_37
  Jac[5,38] = RO_2_837
  Jac[6,32] = JT_2_344_32
  Jac[6,33] = JT_2_344_33
  Jac[6,34] = JT_2_344_34
  Jac[6,35] = JT_2_344_35
  Jac[6,36] = JT_2_344_36
  Jac[6,37] = JT_2_344_37
  Jac[6,38] = RO_2_937
  Jac[7,16] = JT_4_146_16
  Jac[7,17] = JT_4_146_17
  Jac[7,18] = JT_4_146_18
  Jac[7,19] = JT_4_146_19
  Jac[7,20] = RO_4_719
  Jac[8,15] = JT_4_246_15
  Jac[8,16] = JT_4_246_16
  Jac[8,17] = JT_4_246_17
  Jac[8,18] = JT_4_246_18
  Jac[8,19] = JT_4_246_19
  Jac[8,20] = RO_4_819
  Jac[9,15] = JT_4_346_15
  Jac[9,16] = JT_4_346_16
  Jac[9,17] = JT_4_346_17
  Jac[9,18] = JT_4_346_18
  Jac[9,19] = JT_4_346_19
  Jac[9,20] = RO_4_919
  Jac[10,8] = -JT_7_149_8
  Jac[10,9] = -JT_7_149_9
  Jac[10,10] = -JT_7_149_10
  Jac[10,11] = -JT_7_149_11
  Jac[10,12] = -RO_7_711
  Jac[11,7] = -JT_7_249_7
  Jac[11,8] = -JT_7_249_8
  Jac[11,9] = -JT_7_249_9
  Jac[11,10] = -JT_7_249_10
  Jac[11,11] = -JT_7_249_11
  Jac[11,12] = -RO_7_811
  Jac[12,7] = -JT_7_349_7
  Jac[12,8] = -JT_7_349_8
  Jac[12,9] = -JT_7_349_9
  Jac[12,10] = -JT_7_349_10
  Jac[12,11] = -JT_7_349_11
  Jac[12,12] = -RO_7_911
  Jac[13,23] = Jacu_13_23
  Jac[13,24] = Jac_13_24
  Jac[13,25] = Jac_13_25
  Jac[13,26] = Jac_13_26
  Jac[13,27] = Jac_13_27
  Jac[14,23] = Jacu_14_23
  Jac[14,24] = Jac_14_24
  Jac[14,25] = Jac_14_25
  Jac[14,26] = Jac_14_26
  Jac[14,27] = Jac_14_27
  Jac[15,32] = Jacu_15_32
  Jac[15,33] = Jac_15_33
  Jac[15,34] = Jac_15_34
  Jac[15,35] = Jac_15_35
  Jac[15,36] = Jac_15_36
  Jac[16,32] = Jacu_16_32
  Jac[16,33] = Jac_16_33
  Jac[16,34] = Jac_16_34
  Jac[16,35] = Jac_16_35
  Jac[16,36] = Jac_16_36
  Jac[17,15] = Jacu_17_15
  Jac[17,16] = Jac_17_16
  Jac[17,17] = Jac_17_17
  Jac[17,18] = Jac_17_18
  Jac[17,41] = -Plp25
  Jac[18,7] = Jacu_18_7
  Jac[18,8] = Jac_18_8
  Jac[18,9] = Jac_18_9
  Jac[18,10] = Jac_18_10
  Jac[18,41] = Plp26

# ====== END Task 0 ====== 

  

